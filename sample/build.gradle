plugins {
    id 'com.android.application'
    id 'kotlin-android'
    id 'kotlin-kapt'
    id 'kotlin-parcelize'
    id 'dagger.hilt.android.plugin'
//    id 'bytex'
//    id 'LancetX'
}

//ByteX {
//    enable true
//    enableInDebug false
//    logLevel "DEBUG"
//}
//
//
//LancetX {
//    enable true
//    enableInDebug true
//
//}
kapt {
    arguments {
        arg("AROUTER_MODULE_NAME", project.getName())
//        arg("AROUTER_GENERATE_DOC", "enable")
        //是否debug模式
        arg("ROUTER_DEBUG", true)
        //是否打印JS路由文档
        arg("JS_ROUTER_DOC", true)
        //Uri Scheme标识
        arg("ROUTER_SCHEME", "box")
        //JS路由调用方法
        arg("ROUTER_JS_FUN", "window.app.route")
    }
}

android {
    namespace apk.appId + '.' + project.getName()

    compileSdk apk.compileSdkVersion

    //签名配置
    signingConfigs {
        config {
            keyAlias 'box'
            keyPassword 'box2022'
            storeFile file('../box.key')
            storePassword 'box2022'
            enableV1Signing true
            enableV2Signing true
            enableV3Signing false
            enableV4Signing false
        }
    }

    defaultConfig {
        applicationId apk.appId + '.' + project.getName()
        minSdk apk.minSdkVersion
        targetSdk apk.targetSdkVersion
        versionCode apk.versionCode
        versionName apk.versionName
        multiDexEnabled true
        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
        signingConfig signingConfigs.config
        renderscriptTargetApi apk.minSdkVersion
        vectorDrawables {
            useSupportLibrary true
        }
        ndk {
            abiFilters 'armeabi-v7a', 'arm64-v8a'
        }
        //git提交记录id
        buildConfigField "String", "GIT_COMMIT_ID", "\"${"git rev-parse --short HEAD".execute().text.trim()}\""
    }
    buildFeatures {
        viewBinding true
    }
    buildTypes {
        release {
            minifyEnabled true
            zipAlignEnabled true
            shrinkResources true
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
            signingConfig signingConfigs.config
            //打包时间
            buildConfigField "String", "BUILD_TIME", "\"${new Date().format('yyyy-MM-dd HH:mm')}\""
        }
        develop {
            matchingFallbacks = ['release']
            minifyEnabled true
            zipAlignEnabled true
            shrinkResources true
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
            signingConfig signingConfigs.config
            versionNameSuffix '_dev'
            //打包时间
            buildConfigField "String", "BUILD_TIME", "\"${new Date().format('yyyy-MM-dd HH:mm')}\""
        }
        debug {
            minifyEnabled false
            zipAlignEnabled false
            shrinkResources false
            signingConfig signingConfigs.config
            versionNameSuffix '_dev'
            //打包时间
            buildConfigField "String", "BUILD_TIME", "\"2000-01-01 01:01\""
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_17
        targetCompatibility JavaVersion.VERSION_17
    }
    kotlinOptions {
        jvmTarget = '17'
    }
    packagingOptions {
        resources {
            excludes += ['**/*.properties', '**/*.txt']
            excludes += ['META-INF/*.info', 'META-INF/*.version']
            excludes += ['META-INF/*.md', 'META-INF/*.kotlin_module']
            excludes += ['META-INF/maven/com.squareup.okio/okio/pom.xml', 'META-INF/ASL2.0']
            excludes += ['META-INF/MANIFEST.MF', 'META-INF/NOTICE', 'META-INF/LICENSE']
            excludes += ['META-INF/INDEX.LIST', 'META-INF/DEPENDENCIES', 'META-INF/LGPL2.1']
        }
    }
}

dependencies {
    implementation fileTree(include: ['*.jar', '*.aar'], dir: 'libs')

    androidTestDependencies.each { k, v -> androidTestImplementation v }
    processorDependencies.each { k, v -> kapt v }
    testImplementationDependencies.each { k, v -> testImplementation v }
    implementationDependencies.each { k, v -> implementation v }

    //https://github.com/Knight-ZXW/LancetX
    compileOnly 'io.github.knight-zxw:lancet-runtime:0.0.7'


    implementation project(path: ':library:arch')
    implementation project(path: ':library:view')
    implementation project(path: ':library:core')
    implementation project(path: ':library:dialog')
    implementation project(path: ':library:update')
    implementation project(path: ':library:time')
    implementation project(path: ':library:crop')
    implementation project(path: ':library:matisse')
    implementation project(path: ':library:permission')
    implementation project(path: ':library:tablayout')
    implementation project(path: ':library:html')
    implementation project(path: ':library:scanner')
    implementation project(path: ':library:cropper')
    implementation project(path: ':library:log')


//    implementation 'com.github.lany192.box:arch:master-SNAPSHOT'
//    implementation 'com.github.lany192.box:view:master-SNAPSHOT'
//    implementation 'com.github.lany192.box:core:master-SNAPSHOT'
//    implementation 'com.github.lany192.box:dialog:master-SNAPSHOT'
//    implementation 'com.github.lany192.box:update:master-SNAPSHOT'
//    implementation 'com.github.lany192.box:time:master-SNAPSHOT'
//    implementation 'com.github.lany192.box:crop:master-SNAPSHOT'
//    implementation 'com.github.lany192.box:matisse:master-SNAPSHOT'
//    implementation 'com.github.lany192.box:permission:master-SNAPSHOT'
//    implementation 'com.github.lany192.box:tablayout:master-SNAPSHOT'
//    implementation 'com.github.lany192.box:html:master-SNAPSHOT'
//    implementation 'com.github.lany192.box:scanner:master-SNAPSHOT'
//    implementation 'com.github.lany192.box:cropper:master-SNAPSHOT'
//    implementation 'com.github.lany192.box:log:master-SNAPSHOT'

    //内存泄漏检测 https://github.com/square/leakcanary
    debugImplementation 'com.squareup.leakcanary:leakcanary-android:2.12'

    implementation project(path: ':common:router')
    implementation project(path: ':common:network')

    implementation project(path: ':feature:browser')
    implementation project(path: ':feature:hello')
    implementation project(path: ':feature:login')
}
//引入安装包生成配置
apply from: '../package.gradle'