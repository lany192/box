// 是否是单模块运行
def singleRun = run_login_module.toBoolean()
if (singleRun) {
    apply plugin: 'com.android.application'
} else {
    apply plugin: 'com.android.library'
}
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-kapt'
apply plugin: 'kotlin-parcelize'
apply plugin: 'dagger.hilt.android.plugin'
apply plugin: 'com.github.lany192.router'

kapt {
    arguments {
        arg("AROUTER_MODULE_NAME", project.getName())
    }
}

android {
    namespace apk.appId + '.' + project.getName()
    compileSdk Integer.parseInt(libs.versions.android.compile.sdk.get())

    defaultConfig {
        minSdk Integer.parseInt(libs.versions.android.min.sdk.get())
        targetSdk Integer.parseInt(libs.versions.android.target.sdk.get())

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
        consumerProguardFiles "consumer-rules.pro"

        vectorDrawables {
            useSupportLibrary true
        }

        if (singleRun) {
            applicationId namespace
            versionCode apk.versionCode
            versionName apk.versionName
            multiDexEnabled true
            ndk {
                abiFilters 'armeabi-v7a', 'arm64-v8a'
            }
        }
    }

    sourceSets {
        main {
            if (singleRun) {
                java.srcDirs = ['src/main/java', 'src/develop/java']
                res.srcDirs = ['src/main/res', 'src/develop/res']
                manifest.srcFile 'src/develop/AndroidManifest.xml'
            } else {
                java.srcDirs = ['src/main/java']
                manifest.srcFile 'src/main/AndroidManifest.xml'
            }
        }
    }

    buildFeatures {
        viewBinding true
    }
    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    kotlinOptions {
        jvmTarget = JavaVersion.VERSION_1_8
    }
    packagingOptions {
        resources {
            excludes += ['**/*.properties', '**/*.txt']
            excludes += ['META-INF/*.info', 'META-INF/*.version']
            excludes += ['META-INF/*.md', 'META-INF/*.kotlin_module']
            excludes += ['META-INF/maven/com.squareup.okio/okio/pom.xml', 'META-INF/ASL2.0']
            excludes += ['META-INF/MANIFEST.MF', 'META-INF/NOTICE', 'META-INF/LICENSE']
            excludes += ['META-INF/INDEX.LIST', 'META-INF/DEPENDENCIES', 'META-INF/LGPL2.1']
        }
    }
}

dependencies {
    implementation fileTree(include: ['*.jar', '*.aar'], dir: 'libs')
    testImplementation libs.junit
    androidTestImplementation libs.androidx.test.ext.junit2
    androidTestImplementation libs.androidx.test.espresso
    implementation project(path: ':common:router')
    implementation project(path: ':common:network')
    implementation project(path: ':library:arch')
    implementation project(path: ':library:view')
    implementation project(path: ':library:core')
    implementation project(path: ':library:dialog')
    implementation project(path: ':library:update')
    implementation project(path: ':library:time')

    implementation project(path: ':library:tablayout')
    implementation project(path: ':library:html')


    implementation libs.hilt
    kapt libs.hilt.compiler

    implementation libs.lany.router
    kapt libs.lany.router.compiler

    implementation libs.androidx.appcompat
    implementation libs.androidx.constraintlayout
    implementation libs.androidx.material
    implementation libs.toaster
    implementation libs.immersionbar
    if (singleRun) {
        implementation project(path: ':feature:browser')
        implementation project(path: ':feature:hello')
        implementation project(path: ':feature:math')
        implementation project(path: ':feature:user')
        implementation libs.glide
        kapt libs.glide.compiler

        implementation libs.androidx.activity
        implementation libs.androidx.activity.ktx
        implementation libs.androidx.fragment
        implementation libs.androidx.fragment.ktx
        implementation libs.androidx.core.ktx
        implementation libs.androidx.lifecycle.livedata
        implementation libs.androidx.lifecycle.livedata.ktx
        implementation libs.androidx.lifecycle.viewmodel
        implementation libs.androidx.lifecycle.viewmodel.ktx
        implementation libs.androidx.recyclerview
        implementation libs.androidx.multidex
        implementation libs.androidx.exifinterface
        implementation libs.androidx.paging.runtime.ktx
        implementation libs.androidx.paging.runtime
        implementation libs.androidx.startup.runtime
        implementation libs.coroutines.core
        implementation libs.coroutines.android

        implementation libs.brvah
        implementation libs.retrofit
        implementation libs.retrofit.moshi
        implementation libs.retrofit.gson

        implementation libs.moshi

        implementation libs.tencent.mmkv
        implementation libs.tencent.xlog
        implementation libs.tencent.sonic
        implementation libs.tencent.wechat
        implementation libs.tencent.tbs

        implementation libs.xcrash
        implementation libs.refresh.header
        implementation libs.refresh.layout
        implementation libs.backgroundx
        implementation libs.kluban
        implementation libs.luban
        implementation libs.lany.decoration
        implementation libs.lany.keyboard
        implementation libs.flexbox
        implementation libs.number.picker
        implementation libs.eventbus
        implementation libs.lany.download
        implementation libs.banner
        implementation libs.touchimageview
        implementation libs.rxjava
        implementation libs.rxandroid
        implementation libs.spinner
        implementation libs.html.spanner
        implementation libs.phoenix
        implementation libs.permissions
    }
}